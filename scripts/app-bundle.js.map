{"version":3,"sources":["src/app.js","src/environment.js","src/home.js","src/main.js","src/resources/index.js","src/services/async-http-client.js","src/services/fixtures.js","src/services/messages.js","src/services/tweet-service.js","src/view-models/account/account.js","src/view-models/dashboard/dashboard.js","src/view-models/login/login.js","src/view-models/logout/logout.js","src/view-models/new-tweet/new-tweet.js","src/view-models/profile/profile.js","src/view-models/sign-up/sign-up.js","src/view-models/timeline/timeline.js","src/view-models/users/users.js"],"names":["App","ts","au","ea","subscribe","router","navigate","replace","trigger","reset","msg","status","setRoot","attached","isAuthenticated","then","navigateToRoute","configureRouter","config","map","route","name","moduleId","nav","title","debug","testing","Home","aurelia","mapUnknownRoutes","configure","use","standardConfiguration","feature","developmentLogging","plugin","start","AsyncHttpClient","httpClient","fixtures","http","withBaseUrl","baseUrl","console","log","get","url","post","obj","delete","authenticate","user","response","content","localStorage","tweet","JSON","stringify","success","configuration","withHeader","token","publish","catch","message","clearAuthentication","authenticated","donation","auth","parse","Fixtures","LoginStatus","LoggedInUser","TweetService","data","ac","currentUser","allUsers","allTweets","profileTweets","timelineTweets","getAllTweetsForUser","_id","getTimeline","getUsers","firstName","lastName","register","email","password","newUser","registerNewAdmin","login","logout","res","getUser","id","getAdmins","users","getNonAdmin","deleteOneUser","deleteAllUsers","updateUserDetails","details","newTweet","text","unshift","getTweets","getTweet","deleteOneTweet","tweets","deleteAllTweets","follow","followId","unfollow","userId","deleteAllTweetsForUser","Account","tweetService","updateDetails","e","Dashboard","Login","Logout","NewTweet","Profile","forEach","author","fullName","SignUp","Timeline","Users"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './services/messages';\nimport TweetService from './services/tweet-service';\n\n@inject(TweetService, Aurelia, EventAggregator)\nexport class App {\n\n  constructor(ts, au, ea) {\n    this.au = au;\n    this.ts = ts;\n    ea.subscribe(LoginStatus, msg => {\n      this.router.navigate('/', { replace: true, trigger: false });\n      this.router.reset();\n      if (msg.status === true) {\n        au.setRoot('home');\n      } else {\n        au.setRoot('app');\n      }\n    });\n  }\n\n  attached() {\n    if (this.ts.isAuthenticated()) {\n      this.au.setRoot('home').then(() => {\n        this.router.navigateToRoute('new-tweet');\n      });\n    }\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'login'], name: 'login', moduleId: 'view-models/login/login', nav: true, title: 'Login' },\n      { route: 'sign-up', name: 'sign-up', moduleId: 'view-models/sign-up/sign-up', nav: true, title: 'Sign Up' }\n    ]);\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { inject, Aurelia } from 'aurelia-framework';\n\n@inject(Aurelia)\nexport class Home {\n\n  constructor(au) {\n    this.aurelia = au;\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'home'], name: 'new-tweet', moduleId: 'view-models/new-tweet/new-tweet', nav: true, title: 'New Tweet' },\n      { route: 'timeline', name: 'timeline', moduleId: 'view-models/timeline/timeline', nav: true, title: 'Timeline' },\n      { route: 'profile', name: 'profile', moduleId: 'view-models/profile/profile', nav: true, title: 'Profile' },\n      { route: 'users', name: 'users', moduleId: 'view-models/users/users', nav: true, title: 'Users' },\n      { route: 'account', name: 'account', moduleId: 'view-models/account/account', nav: true, title: 'Account' },\n      //{ route: 'dashboard', name: 'dashboard', moduleId: 'view-models/dashboard/dashboard', nav: true, title: 'Dashboard' },\n      { route: 'logout', name: 'logout', moduleId: 'view-models/logout/logout', nav: true, title: 'Logout' }\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes(instruction => {\n      return 'home';\n    });\n  }\n}\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport Fixtures from './fixtures';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoggedInUser, LoginStatus} from './messages';\n\n@inject(HttpClient, Fixtures, EventAggregator)\nexport default class AsyncHttpClient {\n\n  constructor(httpClient, fixtures, ea) {\n    this.http = httpClient;\n    this.http.configure(http => {\n      http.withBaseUrl(fixtures.baseUrl);\n      console.log(this.http);\n    });\n    this.ea = ea;\n  }\n\n  get(url) {\n    return this.http.get(url);\n  }\n\n  post(url, obj) {\n    return this.http.post(url, obj);\n  }\n\n  delete(url) {\n    return this.http.delete(url);\n  }\n\n  authenticate(url, user) {\n    this.http.post(url, user)\n      .then(response => {\n        const status = response.content;\n        localStorage.tweet = JSON.stringify(status);\n        if (status.success) {\n          console.log('authentication successful');\n          this.http.configure(configuration => {\n            configuration.withHeader('Authorization', status.token);\n          });\n        }\n        this.ea.publish(new LoginStatus(status));\n        this.ea.publish(new LoggedInUser(status.user));\n      })\n      .catch(error => {\n        const status = {\n          success: false,\n          message: 'service not available'\n        };\n        console.log('authentication unsuccessful');\n        this.ea.publish(new LoginStatus(status));\n      });\n  }\n\n  clearAuthentication() {\n    localStorage.tweet = null;\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', '');\n    });\n  }\n\n  isAuthenticated() {\n    let authenticated = false;\n    if (localStorage.donation !== 'null') {\n      authenticated = true;\n      this.http.configure(http => {\n        const auth = JSON.parse(localStorage.tweet);\n        http.withHeader('Authorization', 'bearer ' + auth.token);\n      });\n    }\n    return authenticated;\n  }\n}\n","export default class Fixtures {\n  baseUrl = 'https://lit-plains-67430.herokuapp.com';\n}\n","export class LoginStatus {\n  constructor(status) {\n    this.status = status;\n  }\n}\n\nexport class LoggedInUser {\n  constructor(user) {\n    this.user = user;\n  }\n}\n\n\n\n","import {inject} from 'aurelia-framework';\nimport Fixtures from './fixtures';\nimport {LoggedInUser, LoginStatus} from './messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport AsyncHttpClient from './async-http-client';\n\n@inject(Fixtures, EventAggregator, AsyncHttpClient)\nexport default class TweetService {\n\n  currentUser = {};\n  allUsers = [];\n  tweet = {};\n  allTweets = [];\n  profileTweets = [];\n  timelineTweets = [];\n\n  constructor(data, ea, ac) {\n    this.ea = ea;\n    this.ac = ac;\n\n    ea.subscribe(LoggedInUser, msg => {\n      this.currentUser = msg.user;\n      this.getAllTweetsForUser(msg.user._id);\n      this.getTimeline(msg.user._id);\n      this.getUsers();\n      console.log('current user: ' + this.currentUser.firstName + ' ' + this.currentUser.lastName);\n    });\n  }\n\n  register(firstName, lastName, email, password) {\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n    this.ac.post('/api/users', newUser)\n      .then(res => {\n        this.getUsers();\n      });\n  }\n\n  registerNewAdmin(firstName, lastName, email, password) {\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n    this.ac.post('/api/users/admin', newUser)\n      .then(res => {\n        this.getUsers();\n      });\n  }\n\n  login(email, password) {\n    const user = {\n      email: email,\n      password: password\n    };\n    this.ac.authenticate('/api/users/authenticate', user);\n  }\n\n  logout() {\n    const status = {\n      success: false,\n      message: ''\n    };\n    this.ac.clearAuthentication();\n    this.ea.publish(new LoginStatus(status));\n  }\n\n  isAuthenticated() {\n    return this.ac.isAuthenticated();\n  }\n\n  getUsers() {\n    this.ac.get('/api/users')\n      .then(res => {\n        this.allUsers = res.content;\n      });\n  }\n\n  getUser(id) {\n    this.ac.get('/api/users/' + id)\n      .then(res => {\n        this.user = res.content;\n      });\n  }\n\n  getAdmins() {\n    this.ac.get('/api/users/admin')\n      .then(res => {\n        this.users = res.content;\n      });\n  }\n\n  getNonAdmin() {\n    this.ac.get('/api/users/~')\n      .then(res => {\n        this.users = res.content;\n      });\n  }\n\n  deleteOneUser(id) {\n    this.ac.delete('/api/users/' + id)\n      .then(res => {\n        this.users = this.getUsers();\n      });\n  }\n\n  deleteAllUsers() {\n    this.ac.delete('/api/users/')\n      .then(res => {\n        this.users = this.getUsers();\n      });\n  }\n\n  updateUserDetails(id, details) {\n    this.ac.post('/api/users/' + id, details)\n      .then(res => {\n        this.currentUser = res.content;\n        this.users = this.getUsers();\n      });\n  }\n\n  newTweet(text) {\n    let tweet = {\n      text: text\n    };\n    console.log('attempting to post new tweet');\n    this.ac.post('/api/tweets', tweet)\n      .then(res => {\n        this.profileTweets.unshift(res.content);\n        this.getAllTweetsForUser(this.currentUser._id);\n      });\n  }\n\n  getTweets() {\n    this.ac.get('/api/tweets').then(res => {\n      this.allTweets = res.content;\n    });\n  }\n\n  getTweet(id) {\n    this.ac.get('/api/tweets/' + id)\n      .then(res => {\n        //this.ea.publish(new TweetUpdate(res.content));\n      });\n  }\n\n  deleteOneTweet(id) {\n    this.ac.delete('/api/tweets/' + id)\n      .then(res => {\n        this.tweets = this.getTweets();\n      });\n  }\n\n  deleteAllTweets() {\n    this.ac.delete('/api/tweets/')\n      .then(res => {\n        this.tweets = this.getTweets();\n      });\n  }\n\n  follow(id, followId) {\n    this.ac.get('/api/users/' + id + '/follow?_id=' + followId)\n      .then(res => {\n        this.users = this.getUsers();\n      });\n  }\n\n  unfollow(id, followId) {\n    this.ac.get('/api/users/' + id + '/unfollow?_id=' + followId)\n      .then(res => {\n        this.users = this.getUsers();\n      });\n  }\n\n  getAllTweetsForUser(userId) {\n    this.ac.get('/api/users/' + userId + '/tweets')\n      .then(res => {\n        this.profileTweets = res.content;\n      });\n  }\n\n  deleteAllTweetsForUser(userId) {\n    this.ac.delete('/api/users/' + userId + '/tweets')\n      .then(res => {\n        this.tweets = this.getTweets();\n      });\n  }\n\n  getTimeline(userId) {\n    this.ac.get('/api/users/' + userId + '/timeline')\n      .then(res => {\n        this.timelineTweets = res.content;\n      });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Account {\n\n  id;\n  details = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  };\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.id = this.tweetService.currentUser._id;\n    this.details.firstName = this.tweetService.currentUser.firstName;\n    this.details.lastName = this.tweetService.currentUser.lastName;\n    this.details.email = this.tweetService.currentUser.email;\n    this.details.password = this.tweetService.currentUser.password;\n  }\n\n  updateDetails(e) {\n    console.log(this.id, this.details);\n    this.tweetService.updateUserDetails(this.id, this.details);\n  }\n}\n","export class Dashboard {\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Login {\n\n  email = '';\n  password = '';\n\n  constructor(ts) {\n    this.tweetService = ts;\n  }\n\n  login(e) {\n    console.log(`Trying to log in ${this.email}`);\n    this.tweetService.login(this.email, this.password);\n  }\n}\n","import TweetService from '../../services/tweet-service';\nimport {inject} from 'aurelia-framework';\n\n@inject(TweetService)\nexport class Logout {\n\n  constructor(ts) {\n    this.tweetService = ts;\n  }\n\n  logout() {\n    console.log('logging out');\n    this.tweetService.logout();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class NewTweet {\n\n  text = 'Hello world!';\n\n  constructor(ts) {\n    this.tweetService = ts;\n  }\n\n  newTweet() {\n    this.tweetService.newTweet(this.text);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Profile {\n\n  tweets = [];\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.tweets = this.tweetService.profileTweets;\n    this.tweets.forEach(tweet => {\n      tweet.author.fullName = tweet.author.firstName + ' ' + tweet.author.lastName;\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class SignUp {\n\n  firstName = '';\n  lastName = '';\n  email = '';\n  password = '';\n\n  constructor(ts) {\n    this.tweetService = ts;\n  }\n\n  register(e) {\n    this.tweetService.register(this.firstName, this.lastName, this.email, this.password);\n    this.tweetService.login(this.email, this.password);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Timeline {\n\n  tweets = [];\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.tweets = this.tweetService.timelineTweets;\n    this.tweets.forEach(tweet => {\n      tweet.author.fullName = tweet.author.firstName + ' ' + tweet.author.lastName;\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Users {\n\n  users = [];\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.users = this.tweetService.allUsers;\n    this.users.forEach(user => {\n      user.fullName = user.firstName + ' ' + user.lastName;\n    });\n  }\n}\n"],"sourceRoot":".."}